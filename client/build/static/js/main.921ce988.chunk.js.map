{"version":3,"sources":["containers/Videochat/Videochat.jsx","containers/home.jsx","containers/routes.jsx","App.js","registerServiceWorker.js","index.js"],"names":["socket","home","onClick","props","history","push","Component","Videochat","state","ownPeer","peers","on","data","updatePeer","navigator","mediaDevices","getUserMedia","video","facingMode","audio","then","stream","document","createElement","peer","Peer","initiator","trickle","signal","JSON","parse","renegotiate","stringify","emit","index","querySelector","appendChild","srcObject","onloadedmetadata","e","play","remove","getAllUsers","group","users","forEach","user","socketId","id","addPeerToPeers","peerId","setState","length","Promise","resolve","this","value","disabled","openSocket","window","location","hostname","secure","routes","exact","path","component","Home","App","isLocalhost","Boolean","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.921ce988.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Peer from 'simple-peer';\n\nlet socket;\n\nexport default class Videochat extends Component {\n  constructor(props) {\n    super(props);\n    socket = this.props.socket;\n    this.state = {\n      ownPeer: '',\n      peers: []\n    }\n\n    socket.on('connectToPeer', data => {\n      this.updatePeer();\n\n      navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: true, }).then(stream => {\n        var video = document.createElement(\"video\");\n\n        let peer = new Peer({\n          initiator: false,\n          trickle: false,\n          stream\n        });\n\n        peer.signal(JSON.parse(data.peer));\n\n        peer.on('signal', peer => {\n          if (peer.renegotiate) return\n          peer = JSON.stringify(peer)\n          socket.emit('finalHandshake', { peer, index: data.index, socket: data.socket })\n        })\n\n        peer.on('stream', stream => {\n          document.querySelector('#videos').appendChild(video)\n          video.srcObject = stream;\n          video.onloadedmetadata = function (e) {\n            video.play();\n          };\n        })\n\n        peer.on('close', () => {\n          video.remove();\n        })\n      })\n    })\n\n    socket.on('finalHandshake', data => {\n      const peer = this.state.peers[data.index];\n      peer.signal(JSON.parse(data.peer));\n\n      peer.on('stream', stream => {\n        var video = document.createElement(\"video\");\n        document.querySelector('#videos').appendChild(video)\n        video.srcObject = stream;\n        video.onloadedmetadata = function (e) {\n          video.play();\n        };\n      })\n\n      this.updatePeer()\n    })\n  }\n\n  componentDidMount() {\n    // this.startPeer();\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false, }).then(stream => {\n      const video = document.querySelector('#ownVideo')\n      video.srcObject = stream;\n      video.play()\n    })\n\n    socket.emit('addUser', {}, () => {\n      this.getAllUsers()\n    })\n  }\n\n  startPeer() {\n    // navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: false, }).then(stream => {\n    //   const video = document.querySelector('#ownVideo')\n    //   video.srcObject = stream;\n    //   video.play()\n\n    //   let peer = new Peer({\n    //     initiator: true,\n    //     trickle: false,\n    //     stream\n    //   });\n\n    //   this.addPeerToPeers(peer).then(index => {\n    //     this.state.peers[index].on('signal', data => {\n    //       data = JSON.stringify(data);\n\n    // this.setState({ ownPeer: data })\n    // socket.emit('addUser', { peer: data, index }, group => {\n    //   this.getAllUsers(group, data);\n    // })\n    //     })\n    //   })\n    // })\n  }\n\n  getAllUsers() {\n    socket.emit('getAllUsers', group => {\n      navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: true, }).then(stream => {\n\n        group.users.forEach(user => {\n          // DO NOT CONNECT WITH YOURSELF\n          if (user.socketId === socket.id) return;\n          let peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream\n          });\n\n          this.addPeerToPeers(peer).then(index => {\n            this.state.peers[index].on('signal', data => {\n              let peerId = JSON.stringify(data);\n\n              this.setState({ ownPeer: peerId })\n              socket.emit('connectToPeer', { peer: peerId, index, socket: user.socketId })\n            })\n          })\n        })\n      })\n\n      if(group.users.length === 1) {\n        this.updatePeer();\n      }\n    })\n  }\n\n  addPeerToPeers(peer) {\n    return new Promise(resolve => {\n\n      let peers = this.state.peers;\n      peers.push(peer);\n      this.setState({ peers }, () => {\n        resolve(peers.length - 1);\n      })\n    })\n  }\n\n  updatePeer() {\n    this.setState({ ownPeer: \"Loading..\" })\n    navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" }, audio: true, }).then(stream => {\n      let peer = new Peer({\n        initiator: true,\n        trickle: false,\n        stream\n      });\n      this.addPeerToPeers(peer).then(index => {\n        this.state.peers[index].on('signal', data => {\n          data = JSON.stringify(data);\n          this.setState({ ownPeer: data })\n          socket.emit('updateUser', { peer: data, index })\n        })\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        ownPeer: {this.state.ownPeer ? <textarea value={this.state.ownPeer} disabled></textarea> : 'Loading..'}\n        < div id=\"videos\" >\n          <video id=\"ownVideo\"></video>\n        </div >\n      </div >\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class home extends Component {\n  render() {\n    return (\n      <div>\n        JA LETS GO\n        <hr/>\n        <button onClick={() => this.props.history.push('/videochat')}>Videochat</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// Routes\nimport Home from './home';\nimport Videochat from './Videochat/Videochat';\n\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket(`https://${window.location.hostname}`, {secure: true});\n// const socket = openSocket(`http://${window.location.hostname}:5500`, {secure: false});\n\nexport default class routes extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/videochat\" component={() => <Videochat socket={socket} />} />\n\n          {/* <Route component={NotFound} /> */}\n        </Switch>\n      </Router>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\n// Routes\nimport Routes from './containers/routes';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n\n\n\n  render() {\n    return <Routes />\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}